<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="service" class="com.udemy.springbasic.ex07aop.sample02.ServiceImpl"/>

    <!-- POJO로 구현된 Advice -->
    <bean id="loggingAdvice" class="com.udemy.springbasic.ex07aop.sample02.LoggingAdvice"/>
    <bean id="timeCheckAdvice" class="com.udemy.springbasic.ex07aop.sample02.TimeCheckAdvice"/>

    <!-- AOP 설정(aop:before) : ServiceImpl의 모든 메소드에 loggingAdvice의 logging 기능이 메소드 수행 전에 적용되도록 설정 -->
    <aop:config>
        <aop:aspect ref="loggingAdvice">
            <!--
            핵심 기능이 실행되기 전에 Advice를 실행하도록 설정
            method 속성 : 공통 관심 사항 설정(LoggingAdvice의 메소드)
            pointcut 속성과 execution(Point-cut에 대한 표현식 방법 중 하나)을 사용하여 Advice를 적용시킬 메소드를 지정할 수 있다.
            execution(* com.udemy.springbasic.ex07aop.sample02.ServiceImpl.*()) : ServiceImpl의 매개변수가 없는 모든 메소드에 대하여 Adivce(logging)를 적용하도록 설정
             -->
            <aop:before method="logging" pointcut="execution(* com.udemy.springbasic.ex07aop.sample02.ServiceImpl.*())"/>
        </aop:aspect>
    </aop:config>

    <!--
    AOP 설정(aop:around) :
    [주의] 해당 Advice에서 joinPoint.proceed() 코드가 반드시 필요하다.
    -->
    <aop:config>
        <aop:aspect ref="timeCheckAdvice">
            <aop:around method="check" pointcut="execution(* com.udemy.springbasic.ex07aop.sample02.ServiceImpl.*())"/>
        </aop:aspect>
    </aop:config>

</beans>